library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;


entity controladorJogo is
	port(

		jogar 	 : in std_logic;
		clock 	 : in std_logic;
		reset 	 : in std_logic;
		erroInterface : in std_logic;
		prontoInterface : in std_logic;
		prontoMedidor : in std_logic;
		fimEspera	  : in std_logic;
		fimContador	  : in std_logic;
		ligaEspera	  : out std_logic;
		ligaInterface : out std_logic;
		ligaMedidor	  : out std_logic;
		ligado : out std_logic;
		pronto : out std_logic;
		saidaErro : out std_logic
	);
end entity;

architecture controladorJogo_arch of controladorJogo is

	type tipo_estado is (INICIAL, LIGADO1, LIGADO2, ERRO, FIMINTERFACE, JOGOPRONTO, ESPERA);
	signal Eatual, Eprox: tipo_estado;
begin

	process (clock, reset)
    begin
        if reset = '1' then
            Eatual <= INICIAL;
        elsif clock'event and clock = '1' then
            Eatual <= Eprox;
        end if;
    end process;

    process (jogar, erroInterface, prontoInterface, prontoMedidor, fimEspera, fimContador, Eatual)
    begin
        case Eatual is
            when INICIAL => if jogar = '0' then   Eprox <= INICIAL;
                            else                    Eprox <= LIGADO1;
                            end if;

            when LIGADO1 => Eprox <= LIGADO2;

            when LIGADO2 => if prontoInterface = '0' then  Eprox <= LIGADO2;
            				 elsif fimContador = '1' then Eprox <= ERRO;
                             elsif erroInterface = '0' then Eprox <= FIMINTERFACE;
                             else  Eprox <= ERRO;
                         	 end if;

            when FIMINTERFACE =>  if prontoMedidor = '1' then Eprox <= JOGOPRONTO;
            					  else Eprox <= ERRO;
            					  end if;

            when JOGOPRONTO => Eprox <= ESPERA;
                           
            when ERRO => Eprox <= ERRO;

            when ESPERA => Eprox <= INICIAL;
            				
            when others =>  Eprox <= INICIAL;
        end case;
    end process;

    with Eatual select
        ligaMedidor  <= '1' when LIGADO1 | LIGADO2 | FIMINTERFACE,
                     '0' when others;
	with Eatual select
        ligaInterface  <= '1' when LIGADO2,
                     '0' when others;
    with Eatual select
        ligado <= '1' when LIGADO1 | LIGADO2 | FIMINTERFACE,
                        '0' when others;
	 with Eatual select
        pronto <= '1' when JOGOPRONTO,
                   '0' when others;
    
    with Eatual select
        saidaErro <= '1' when ERRO,
                  '0' when others;

    with Eatual select
        ligaEspera <= '1' when JOGOPRONTO,
                  '0' when others;



end architecture;